import Waiting from 'olive/components/waiting';
import Url from 'olive/components/url';
import { ModalHelper } from 'olive/components/modal';
import MasterDetail from 'olive/components/masterDetail';
import Validate from 'olive/components/validate';
import LiteEvent from 'olive/components/liteEvent';
import Form from 'olive/components/form';
import Select from 'olive/plugins/select';
import Alert from 'olive/components/alert';
export interface IViewUpdatedEventArgs {
    container: JQuery;
    trigger: any;
    isNewPage: boolean;
}
export default class CombinedUtilities implements IService {
    private url;
    private waiting;
    private modalHelper;
    private validate;
    private masterDetail;
    private form;
    private select;
    private alert;
    private requestCounter_ar;
    private ajaxChangedUrl_ar;
    private isAjaxRedirecting_ar;
    onRedirected_ar: ((title: string, url: string) => void);
    onRedirectionFailed_ar: ((url: string, response: JQueryXHR) => void);
    isAwaitingAjaxResponse_fa: boolean;
    events_fa: {
        [event: string]: Function[];
    };
    private dynamicallyLoadedScriptFiles_fa;
    onViewChanged_fa: LiteEvent<IViewUpdatedEventArgs>;
    constructor(url: Url, waiting: Waiting, modalHelper: ModalHelper, validate: Validate, masterDetail: MasterDetail, form: Form, select: Select, alert: Alert);
    defaultOnRedirected_ar(title: string, url: string): void;
    defaultOnRedirectionFailed_ar(url: string, response: JQueryXHR): void;
    enableBack_ar(selector: JQuery): void;
    enableRedirect_ar(selector: JQuery): void;
    private redirect_ar;
    private back_ar;
    go_ar(url: string, trigger?: JQuery, isBack?: boolean, keepScroll?: boolean, addToHistory?: boolean): boolean;
    enableInvokeWithAjax_fa(selector: JQuery, event: string, attrName: string): void;
    enableinvokeWithPost_fa(selector: JQuery): void;
    private invokeWithPost_fa;
    invokeWithAjax_fa(event: any, actionUrl: any, syncCall?: boolean): boolean;
    onAjaxResponseError_fa(jqXHR: JQueryXHR, status: string, error: string): void;
    processAjaxResponse_fa(response: any, containerModule: any, trigger: any, args: any): void;
    private raiseViewChanged_fa;
    private navigate_fa;
    private processWithTheContent_fa;
    private updateUrl_fa;
    enableLinkModal_sa(selector: JQuery): void;
    runStartup_sa(container?: JQuery, trigger?: any, stage?: string): void;
    runAll_sa(actions: any, trigger?: any): void;
    private run_sa;
    private notify_sa;
    private redirect_sa;
    private openModal_sa;
    private openModaliFrame_sa;
}
